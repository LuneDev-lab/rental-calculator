{"ast":null,"code":"var _jsxFileName = \"/workspaces/rental-calculator/src/components/InputField.js\",\n  _s = $RefreshSig$();\n// src/components/InputField.js\nimport React, { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputField = ({\n  label,\n  value,\n  // Este 'value' é a string de centavos (ex: \"50000\")\n  onChange,\n  placeholder,\n  // Este placeholder é o valor em centavos também\n  icon,\n  required = false,\n  helperText\n}) => {\n  _s();\n  // Formata uma string de centavos para exibição como moeda (ex: \"50000\" -> R$ 500,00)\n  const formatToCurrencyDisplay = useCallback(centsString => {\n    if (!centsString) {\n      return '';\n    }\n    const numberValue = parseInt(centsString, 10) / 100;\n    if (isNaN(numberValue)) {\n      return '';\n    }\n    return numberValue.toLocaleString('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    });\n  }, []);\n\n  // Formata o placeholder (que também é um valor em centavos)\n  const formattedPlaceholder = React.useMemo(() => {\n    return formatToCurrencyDisplay(placeholder);\n  }, [placeholder, formatToCurrencyDisplay]);\n\n  // Lida com a mudança no input, limpando para obter apenas os dígitos (centavos)\n  const handleChange = e => {\n    const inputValue = e.target.value;\n    // Remove tudo que não for dígito para obter a string de centavos\n    const digitsOnly = inputValue.replace(/\\D/g, '');\n    // Passa a string de centavos para o componente pai\n    onChange(digitsOnly);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block text-sm font-semibold text-white mb-2\",\n      children: [label, required && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-pink-400 ml-1\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formatToCurrencyDisplay(value),\n        onChange: handleChange,\n        placeholder: formattedPlaceholder\n        // pl-4 para padding normal à esquerda, pr-12 para dar espaço ao ícone à direita\n        // A classe \"pr-12\" (padding-right) é a chave para o ícone não sobrepor o texto\n        ,\n        className: \"w-full pl-4 pr-12 py-4 bg-white/10 border border-white/20 rounded-2xl text-white placeholder-blue-300 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent transition-all duration-300 backdrop-blur-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute right-4 top-1/2 transform -translate-y-1/2 text-blue-300\",\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), helperText && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-sm text-blue-300/80\",\n      children: helperText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(InputField, \"WTazhJMei6ekRYAkh/rhYGkWMhE=\");\n_c = InputField;\nexport default InputField;\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["React","useCallback","jsxDEV","_jsxDEV","InputField","label","value","onChange","placeholder","icon","required","helperText","_s","formatToCurrencyDisplay","centsString","numberValue","parseInt","isNaN","toLocaleString","style","currency","formattedPlaceholder","useMemo","handleChange","e","inputValue","target","digitsOnly","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/workspaces/rental-calculator/src/components/InputField.js"],"sourcesContent":["// src/components/InputField.js\nimport React, { useCallback } from 'react';\n\nconst InputField = ({ \n  label, \n  value, // Este 'value' é a string de centavos (ex: \"50000\")\n  onChange, \n  placeholder, // Este placeholder é o valor em centavos também\n  icon, \n  required = false, \n  helperText \n}) => {\n\n  // Formata uma string de centavos para exibição como moeda (ex: \"50000\" -> R$ 500,00)\n  const formatToCurrencyDisplay = useCallback((centsString) => {\n    if (!centsString) {\n      return '';\n    }\n    const numberValue = parseInt(centsString, 10) / 100;\n    if (isNaN(numberValue)) {\n      return '';\n    }\n    return numberValue.toLocaleString('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    });\n  }, []);\n\n  // Formata o placeholder (que também é um valor em centavos)\n  const formattedPlaceholder = React.useMemo(() => {\n    return formatToCurrencyDisplay(placeholder);\n  }, [placeholder, formatToCurrencyDisplay]);\n\n  // Lida com a mudança no input, limpando para obter apenas os dígitos (centavos)\n  const handleChange = (e) => {\n    const inputValue = e.target.value;\n    // Remove tudo que não for dígito para obter a string de centavos\n    const digitsOnly = inputValue.replace(/\\D/g, '');\n    // Passa a string de centavos para o componente pai\n    onChange(digitsOnly); \n  };\n\n  return (\n    <div className=\"relative\">\n      <label className=\"block text-sm font-semibold text-white mb-2\">\n        {label}\n        {required && <span className=\"text-pink-400 ml-1\">*</span>}\n      </label>\n      \n      <div className=\"relative\">\n        {/* ======================= ALTERAÇÃO PRINCIPAL AQUI ======================= */}\n\n        {/* 1. INPUT FIELD */}\n        <input\n          type=\"text\"\n          value={formatToCurrencyDisplay(value)} \n          onChange={handleChange}\n          placeholder={formattedPlaceholder}\n          // pl-4 para padding normal à esquerda, pr-12 para dar espaço ao ícone à direita\n          // A classe \"pr-12\" (padding-right) é a chave para o ícone não sobrepor o texto\n          className=\"w-full pl-4 pr-12 py-4 bg-white/10 border border-white/20 rounded-2xl text-white placeholder-blue-300 focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent transition-all duration-300 backdrop-blur-sm\"\n        />\n        \n        {/* 2. ÍCONE POSICIONADO NO FINAL DO INPUT */}\n        {/* O ícone agora está depois do input no código, e com as classes \"right-4\" */}\n        <div className=\"absolute right-4 top-1/2 transform -translate-y-1/2 text-blue-300\">\n          {icon}\n        </div>\n\n        {/* ======================= FIM DA ALTERAÇÃO PRINCIPAL ======================= */}\n      </div>\n      \n      {helperText && (\n        <p className=\"mt-2 text-sm text-blue-300/80\">{helperText}</p>\n      )}\n    </div>\n  );\n};\n\nexport default InputField;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAC;EAClBC,KAAK;EACLC,KAAK;EAAE;EACPC,QAAQ;EACRC,WAAW;EAAE;EACbC,IAAI;EACJC,QAAQ,GAAG,KAAK;EAChBC;AACF,CAAC,KAAK;EAAAC,EAAA;EAEJ;EACA,MAAMC,uBAAuB,GAAGZ,WAAW,CAAEa,WAAW,IAAK;IAC3D,IAAI,CAACA,WAAW,EAAE;MAChB,OAAO,EAAE;IACX;IACA,MAAMC,WAAW,GAAGC,QAAQ,CAACF,WAAW,EAAE,EAAE,CAAC,GAAG,GAAG;IACnD,IAAIG,KAAK,CAACF,WAAW,CAAC,EAAE;MACtB,OAAO,EAAE;IACX;IACA,OAAOA,WAAW,CAACG,cAAc,CAAC,OAAO,EAAE;MACzCC,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,oBAAoB,GAAGrB,KAAK,CAACsB,OAAO,CAAC,MAAM;IAC/C,OAAOT,uBAAuB,CAACL,WAAW,CAAC;EAC7C,CAAC,EAAE,CAACA,WAAW,EAAEK,uBAAuB,CAAC,CAAC;;EAE1C;EACA,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,UAAU,GAAGD,CAAC,CAACE,MAAM,CAACpB,KAAK;IACjC;IACA,MAAMqB,UAAU,GAAGF,UAAU,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAChD;IACArB,QAAQ,CAACoB,UAAU,CAAC;EACtB,CAAC;EAED,oBACExB,OAAA;IAAK0B,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvB3B,OAAA;MAAO0B,SAAS,EAAC,6CAA6C;MAAAC,QAAA,GAC3DzB,KAAK,EACLK,QAAQ,iBAAIP,OAAA;QAAM0B,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eAER/B,OAAA;MAAK0B,SAAS,EAAC,UAAU;MAAAC,QAAA,gBAIvB3B,OAAA;QACEgC,IAAI,EAAC,MAAM;QACX7B,KAAK,EAAEO,uBAAuB,CAACP,KAAK,CAAE;QACtCC,QAAQ,EAAEgB,YAAa;QACvBf,WAAW,EAAEa;QACb;QACA;QAAA;QACAQ,SAAS,EAAC;MAAiO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5O,CAAC,eAIF/B,OAAA;QAAK0B,SAAS,EAAC,mEAAmE;QAAAC,QAAA,EAC/ErB;MAAI;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGH,CAAC,EAELvB,UAAU,iBACTR,OAAA;MAAG0B,SAAS,EAAC,+BAA+B;MAAAC,QAAA,EAAEnB;IAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAC7D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA1EIR,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AA4EhB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}